diff a/README.md b/README.md	(rejected hunks)
@@ -16,19 +18,26 @@
         <img src="https://img.shields.io/badge/discourse-browse_forum-red.svg?color=0052FF&labelColor=090422&logo=discourse" /></a>
 </p>
 
-## Welcome!
+Visit the full docs [here](https://PrefectHQ.github.io/prefect-ray) to see additional examples and the API reference.
 
 Prefect integrations with the Ray execution framework, a flexible distributed computing framework for Python.
 
-## Getting Started
 
-### Python setup
+<!--- ### Add a real-world example of how to use this Collection here
 
-Requires an installation of Python 3.7+.
+Offer some motivation on why this helps.
 
-We recommend using a Python virtual environment manager such as pipenv, conda or virtualenv.
+After installing `prefect-ray` and [saving the credentials](#saving-credentials-to-block), you can easily use it within your flows to help you achieve the aforementioned benefits!
 
-These tasks are designed to work with Prefect 2.0. For more information about how to use Prefect, please refer to the [Prefect documentation](https://orion-docs.prefect.io/).
+```python
+from prefect import flow, get_run_logger
+```
+
+--->
+
+## Resources
+
+For more tips on how to use tasks and flows in a Collection, check out [Using Collections](https://orion-docs.prefect.io/collections/usage/)!
 
 ### Installation
 
@@ -38,51 +47,75 @@ Install `prefect-ray` with `pip`:
 pip install prefect-ray
 ```
 
-Then, register to [view the block](https://orion-docs.prefect.io/ui/blocks/) on Prefect Cloud:
+Requires an installation of Python 3.7+.
 
-```bash
-prefect block register -m prefect_ray.credentials
-```
+We recommend using a Python virtual environment manager such as pipenv, conda or virtualenv.
+
+These tasks are designed to work with Prefect 2.0. For more information about how to use Prefect, please refer to the [Prefect documentation](https://orion-docs.prefect.io/).
+
+<!--- ### Saving credentials to block
 
 Note, to use the `load` method on Blocks, you must already have a block document [saved through code](https://orion-docs.prefect.io/concepts/blocks/#saving-blocks) or [saved through the UI](https://orion-docs.prefect.io/ui/blocks/).
 
-### Write and run a flow
+Below is a walkthrough on saving block documents through code.
 
-```python
-from prefect import flow
-from prefect_ray.tasks import (
-    goodbye_prefect_ray,
-    hello_prefect_ray,
-)
+1. Head over to <SERVICE_URL>.
+2. Login to your <SERVICE> account.
+3. Click "+ Create new secret key".
+4. Copy the generated API key.
+5. Create a short script, replacing the placeholders (or do so in the UI).
 
+```python
+from prefect_ray import Block
+Block(api_key="API_KEY_PLACEHOLDER").save("BLOCK_NAME_PLACEHOLDER")
+```
 
-@flow
-def example_flow():
-    hello_prefect_ray
-    goodbye_prefect_ray
+Congrats! You can now easily load the saved block, which holds your credentials:
 
-example_flow()
+```python
+from prefect_ray import Block
+Block.load("BLOCK_NAME_PLACEHOLDER")
 ```
 
-## Resources
+!!! info "Registering blocks"
+
+    Register blocks in this module to
+    [view and edit them](https://orion-docs.prefect.io/ui/blocks/)
+    on Prefect Cloud:
+
+    ```bash
+    prefect block register -m prefect_ray
+    ```
+
+A list of available blocks in `prefect-ray` and their setup instructions can be found [here](https://PrefectHQ.github.io/prefect-ray/blocks_catalog).
+
+--->
+
+### Feedback
 
 If you encounter any bugs while using `prefect-ray`, feel free to open an issue in the [prefect-ray](https://github.com/PrefectHQ/prefect-ray) repository.
 
 If you have any questions or issues while using `prefect-ray`, you can find help in either the [Prefect Discourse forum](https://discourse.prefect.io/) or the [Prefect Slack community](https://prefect.io/slack).
 
-Feel free to ⭐️ or watch [`prefect-ray`](https://github.com/PrefectHQ/prefect-ray) for updates too!
+Feel free to star or watch [`prefect-ray`](https://github.com/PrefectHQ/prefect-ray) for updates too!
 
-## Development
+### Contributing
 
-If you'd like to install a version of `prefect-ray` for development, clone the repository and perform an editable install with `pip`:
-
-```bash
-git clone https://github.com/PrefectHQ/prefect-ray.git
+If you'd like to help contribute to fix an issue or add a feature to `prefect-ray`, please [propose changes through a pull request from a fork of the repository](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/creating-a-pull-request-from-a-fork).
 
-cd prefect-ray/
+Here are the steps:
 
+1. [Fork the repository](https://docs.github.com/en/get-started/quickstart/fork-a-repo#forking-a-repository)
+2. [Clone the forked repository](https://docs.github.com/en/get-started/quickstart/fork-a-repo#cloning-your-forked-repository)
+3. Install the repository and its dependencies:
+```
 pip install -e ".[dev]"
-
-# Install linting pre-commit hooks
+```
+4. Make desired changes
+5. Add tests
+6. Insert an entry to [CHANGELOG.md](https://github.com/PrefectHQ/prefect-ray/blob/main/CHANGELOG.md)
+7. Install `pre-commit` to perform quality checks prior to commit:
+```
 pre-commit install
 ```
+8. `git commit`, `git push`, and create a pull request
